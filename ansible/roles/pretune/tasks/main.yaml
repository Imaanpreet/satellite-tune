---
  #We need to backup data before performing tunings
  #Check is a backup is already there or not
  - name: "Check is there is some previous backup"
    stat: 
      path: /root/tune-backup
    register: backup_found
  - debug:
      var: backup_found
  #Backup httpd
  - name: "Backup httpd service"
    command:
      cp -r "{{ item }}" "/root/tune-backup/httpd/"
    with_items:
      - "/etc/security/limits.d/99-httpd-nofile.conf"
      - "/etc/systemd/system/httpd.service.d"
    ignore_errors: True
    when: backup_found.stat.exists is not defined or backup_found.stat.exists == 'False'
  #Backup Passenger
  - name: "Backup Passenger"
    command:
      cp -r "{{ item }}" "/root/tune-backup/passenger/"
    with_items:
      - "/etc/httpd/conf.d/05-foreman-ssl.conf"
      - "/etc/httpd/conf.d/25-puppet.conf"
      - "/etc/httpd/conf.d/passenger.conf"
    ignore_errors: True
    when: backup_found.stat.exists is not defined or backup_found.stat.exists == 'False'
  #Backup PgSQL
  - name: "Backup PostgresSQL"
    command:
      cp -r "/var/lib/pgsql/data/postgresql.conf" "/root/tune-backup/pgsql/"
    ignore_errors: True
    when: backup_found.stat.exists is not defined or backup_found.stat.exists == 'False'
  #Backup Qdrouter
  - name: "Backup qdrouterd"
    command:
      cp -r "{{ item }}" "/root/tune-backup/qdrouterd/"
    with_items:
      - "/etc/systemd/system/qdrouterd.service.d"      
    ignore_errors: True
    when: backup_found.stat.exists is not defined or backup_found.stat.exists == 'False'
  #Backup QPIDD
  - name: "Backup QPIDD"
    command:
      cp -r "{{ item }}" "/root/tune-backup/qpidd/"
    with_items:
      - "/etc/sysctl.d/50-qpidd.conf"
      - "/etc/systemd/system/qpidd.service.d"
      - "/etc/qpid/qpidd.conf"
    ignore_errors: True
    when: backup_found.stat.exists is not defined or backup_found.stat.exists == 'False'
  #Backup DynFlow
  - name: "Backup DynFlow"
    command:
      cp -r "{{ item }}" "/root/tune-backup/dynflow/"
    with_items:
      - "/etc/smart_proxy_dynflow_core/settings.yml"
      - "/etc/systemd/system/smart_proxy_dynflow_core.service.d"
    ignore_errors: True
    when: backup_found.stat.exists is not defined or backup_found.stat.exists == 'False'
